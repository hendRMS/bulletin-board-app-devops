//podTemplate(containers: [
//    containerTemplate(
//        name: 'docker', 
//        image: 'docker', 
//        command: 'sleep', 
//        args: '30d'
//        )
//    //containerTemplate(
//    //    name: 'python', 
//    //    image: 'python:latest', 
//    //    command: 'sleep', 
//    //    args: '30d')
//  ]) {
podTemplate(yaml: '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: docker
    image: docker:20.10.17-dind
    securityContext:
      privileged: true
    env:
      - name: DOCKER_TLS_CERTDIR
        value: ""
''') 

{
    node(POD_LABEL) {
        container('docker') { 
        environment { 
        registry = "hend91/node-board" 
        //registryCredential = 'dockerhub_id' 
        dockerImage = '' 
        registryCredential = 'DockerHubCredentials'
        }
        stage('Checkout from GitHub') {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "*/master"]],
                    extensions: [],
                    userRemoteConfigs: [[
                     //   credentialsId: 'rflx-jenkins',
                        url: 'https://github.com/hendRMS/bulletin-board-app-devops.git'
                        ]]
                ])
            }

        stage('Update the code') {
                script {
                        echo "====Running StartUp script ===="
                        sh """
                           sed -i 's/145/0,.1/g' site.css
                           sed -i 's/98/0/g' site.css
                           sed -i 's/41/0/g' site.css
                           sed -i 's/rgb/rgba/g' site.css
                           sed -i 's/380a66/366ec3/g' site.css
                           sed -i 's/Board/Board Demo!/g' index.html
                           """
                           }
                        }       
        stage('Build Docker Image') {
                script {
                    echo "====Building Docker Image===="
                    dockerImage = docker.build "hend91/node-board"+ ":$BUILD_NUMBER"       
                        }  
            }
        //
        stage('Push Docker Image') {
                script {
                   echo "====Push Docker Image===="
                    dockerImage.push() 
                        }    
                    }
        //
        stage('Cleaning up') { 
              sh "docker rmi $registry:$BUILD_NUMBER" 

                } 

        //    
        }
    }
}


